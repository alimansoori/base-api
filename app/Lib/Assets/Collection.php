<?php
namespace Lib\Assets;


use Phalcon\Assets\ResourceInterface;

class Collection extends \Phalcon\Assets\Collection
{
    public function addInlineCss( $content, $filter = true, $attributes = null )
    {
        /** @var Inline $code */
        foreach($this->getCodes() as $code)
        {
            if($code->getType() == 'css' && $code->getContent() === $content)
                return $this;
        }

        return parent::addInlineCss( $content, $filter, $attributes ); // TODO: Change the autogenerated stub
    }

    public function addInlineJs( $content, $filter = true, $attributes = null )
    {
        /** @var Inline $code */
        foreach($this->getCodes() as $code)
        {
            if($code->getType() == 'js' && $code->getContent() === $content)
                return $this;
        }

        return parent::addInlineJs( $content, $filter, $attributes ); // TODO: Change the autogenerated stub
    }

    public function hasResourceByPath($path)
    {
        /** @var ResourceInterface $resource */
        foreach($this->getResources() as $resource)
        {
            if($resource->getPath() == $path)
            {
                return true;
                break;
            }
        }

        return false;
    }

    public function reset()
    {
        $this->_resources = [];
    }

    public function __toString()
    {
        return '';
    }
}